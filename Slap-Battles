-- Booting the Library
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

-- Creating a Window
local Window = OrionLib:MakeWindow({
    Name = "[üéÉHALLOWEEN] Slap Battlesüëè",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "OrionTest"
})

-- Creating a Tab
local Tab = Window:MakeTab({
    Name = "Candy Farm",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Creating a Section
local Section = Tab:AddSection({
    Name = "Candy Buttons"
})

-- Creating six buttons with specified names
Tab:AddButton({
    Name = "Collect Candy v1 üç¨",
    Callback = function()
        -- Function to get the player's character
local function getPlayerCharacter()
    local player = game.Players.LocalPlayer
    return player.Character or player.CharacterAdded:Wait()
end

-- Function to teleport to CandyCorn with children
local function teleportToCandyCorn(candyCorn)
    -- Check if the CandyCorn has children
    if #candyCorn:GetChildren() > 0 then
        -- Get the player's character
        local character = getPlayerCharacter()
        -- Teleport the character to the CandyCorn's position
        character:SetPrimaryPartCFrame(CFrame.new(candyCorn.Position))
    end
end

-- Function to set up CandyCorn event listeners
local function setupCandyCornListeners()
    -- Loop through all existing CandyCorns and connect the ChildAdded event
    for _, candyCorn in pairs(workspace.CandyCorns:GetChildren()) do
        -- Check if the object is a Part
        if candyCorn:IsA("Part") then
            -- Connect the ChildAdded event
            candyCorn.ChildAdded:Connect(function()
                teleportToCandyCorn(candyCorn)
            end)

            -- Check if it already has children when the script starts
            teleportToCandyCorn(candyCorn)
        end
    end

    -- Also connect to any new CandyCorns that may be added in the future
    workspace.CandyCorns.ChildAdded:Connect(function(newCandyCorn)
        if newCandyCorn:IsA("Part") then
            -- Connect the ChildAdded event for the new CandyCorn
            newCandyCorn.ChildAdded:Connect(function()
                teleportToCandyCorn(newCandyCorn)
            end)

            -- Check if it already has children when it spawns
            teleportToCandyCorn(newCandyCorn)
        end
    end)
end

-- Main loop to handle character respawn
local function main()
    setupCandyCornListeners()

    -- Get the player's character and listen for respawns
    local player = game.Players.LocalPlayer
    player.CharacterAdded:Connect(function()
        -- Wait for the new character to load
        local character = getPlayerCharacter()
        -- Optionally, you can reset any properties or states here if needed

        -- Re-establish CandyCorn listeners after respawn
        setupCandyCornListeners()
    end)

    -- Initial character setup
    getPlayerCharacter() -- This ensures we have the current character
end

-- Start the main loop
main()
    end    
})



Tab:AddButton({
    Name = "Collect Candy v2 üç≠",
    Callback = function()
       -- Get the player's head (used to simulate the touch)
local playerHead = game.Players.LocalPlayer.Character.Head

-- Keep running the script
while true do
    -- Loop through all the CandyCorns in the workspace
    for i, v in pairs(game:GetService("Workspace").CandyCorns:GetDescendants()) do
        -- Check if the object is "TouchInterest" and its parent exists
        if v.Name == "TouchInterest" and v.Parent then
            -- Simulate a touch event using firetouchinterest
            firetouchinterest(playerHead, v.Parent, 0)  -- Begin touch
            firetouchinterest(playerHead, v.Parent, 1)  -- End touch
        end
    end
    wait(0.01) -- Tiny delay to avoid crashing, but keeps the script fast
end
    end    
})



Tab:AddButton({
    Name = "Go to Event üéâ",
    Callback = function()
       -- Get the player's character
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Teleport the character to the specified coordinates
character:SetPrimaryPartCFrame(CFrame.new(429, 360, 20))
    end    
})

Tab:AddButton({
    Name = "Slap Aura Zombies üëª",
    Callback = function()
       
-- Script generated by TurtleSpy, made by Intrer#0421

_G.HeadSize = 14  -- Adjusted head size
_G.Disabled = true

-- Table to keep track of hits on each enemy
local enemyHitCounts = {}
local lastHitTime = {} -- Table to track last hit time for each enemy

-- Time between hits (in seconds)
local hitCooldown = 1

-- Function to reset hit counts for all enemies
local function resetHitCounts()
    for enemy, _ in pairs(enemyHitCounts) do
        enemyHitCounts[enemy] = 0
    end
end

game:GetService('RunService').RenderStepped:connect(function()
    if _G.Disabled then
        -- Check for enemies in the workspace
        local enemies = game:GetService('Workspace').Enemies:GetChildren()
        
        -- Only run the hit logic if there are enemies
        if #enemies > 0 then
            -- Loop through all the enemies
            for _, enemy in pairs(enemies) do
                -- Ensure the enemy has a HumanoidRootPart
                if enemy:FindFirstChild("HumanoidRootPart") then
                    -- Initialize hit count and last hit time for this enemy if they don't exist
                    if not enemyHitCounts[enemy] then
                        enemyHitCounts[enemy] = 0
                    end
                    if not lastHitTime[enemy] then
                        lastHitTime[enemy] = 0
                    end

                    -- Check if the enemy has been hit less than 15 times and if enough time has passed since the last hit
                    if enemyHitCounts[enemy] < 15 and tick() - lastHitTime[enemy] >= hitCooldown then
                        -- Fire the remote event to hit the enemy
                        game:GetService("ReplicatedStorage").Remotes.GeneralHit:FireServer(enemy.HumanoidRootPart)

                        -- Increment the hit count for this enemy
                        enemyHitCounts[enemy] = enemyHitCounts[enemy] + 1
                        lastHitTime[enemy] = tick() -- Update the last hit time

                        -- Optional: Modify the enemy's appearance
                        pcall(function()
                            enemy.HumanoidRootPart.Transparency = 0.7
                            enemy.HumanoidRootPart.BrickColor = BrickColor.new("Really blue")
                            enemy.HumanoidRootPart.Material = "Neon"
                            enemy.HumanoidRootPart.CanCollide = false
                        end)
                    end
                end
            end
        else
            -- Reset hit counts if no enemies are present
            resetHitCounts()
        end
    end
end)
    end    
})

Tab:AddButton({
    Name = "Safe Zone üõ°Ô∏è",
    Callback = function()
        -- Get the player's character
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Teleport the character to the specified coordinates
character:SetPrimaryPartCFrame(CFrame.new(-13, 10, -266))

    end    
})

Tab:AddButton({
    Name = "Rejoin üîÑ",
    Callback = function()
        local teleportService = game:GetService("TeleportService") -- TeleportService
        local localPlayer = game:GetService("Players").LocalPlayer -- LocalPlayer
        
        -- Function to rejoin the server
        teleportService:Teleport(game.PlaceId, localPlayer) -- Rejoin to the same server
        
    end    
})

-- Creating a new Tab for Credits
local CreditsTab = Window:MakeTab({
    Name = "Credits",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Adding a button to the Credits Tab
CreditsTab:AddButton({
    Name = "Credits to Geeky Blox ü•≥",
    Callback = function()
        print("Credits to Geeky Blox!")
    end    
})

-- Finishing your script (REQUIRED)
OrionLib:Init()
